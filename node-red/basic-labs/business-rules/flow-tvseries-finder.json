[{"id":"1daf4404.a925f4","type":"comment","z":"24eaa0b5.1a8cc8","name":"TV Series Finder Demo","info":"This demo is purposed to demonstrate :\n- integration of bluemix services without any code (just configuration)\n- Twitter service integration\n- integration of Business Rules service through REST API (JSON payload)\n- tweet stored in MongoLab\n","x":118,"y":31,"wires":[]},{"id":"6872b17b.fcf62","type":"switch","z":"24eaa0b5.1a8cc8","name":"score","property":"sentiment.score","propertyType":"msg","rules":[{"t":"gt","v":"0","vt":"str"},{"t":"eq","v":"0","vt":"str"},{"t":"lt","v":"0","vt":"str"}],"checkall":"false","outputs":3,"x":534,"y":81,"wires":[["487b6318.0f3cf4"],["140a9b18.0313c5"],["3791f7f3.9a20b"]]},{"id":"487b6318.0f3cf4","type":"function","z":"24eaa0b5.1a8cc8","name":"positive counts","func":"context.pos = context.pos || 0;    \ncontext.pos += 1;\nmsg.sentiment=\"pos\"; // override msg.sentiment added by the sentiment node\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":145,"wires":[["8a1604b4.02c3b8"]]},{"id":"140a9b18.0313c5","type":"function","z":"24eaa0b5.1a8cc8","name":"neutral counts","func":"context.neu = context.neu || 0;    \ncontext.neu += 1;\nmsg.sentiment=\"neu\";\nreturn msg;","outputs":1,"x":550,"y":193,"wires":[["8a1604b4.02c3b8"]]},{"id":"3791f7f3.9a20b","type":"function","z":"24eaa0b5.1a8cc8","name":"negative counts","func":"context.neg = context.neg || 0;    \ncontext.neg += 1;\nmsg.sentiment=\"neg\";\nreturn msg;","outputs":1,"x":543,"y":241.99998474121094,"wires":[["8a1604b4.02c3b8"]]},{"id":"985290d5.0fcc4","type":"websocket in","z":"24eaa0b5.1a8cc8","name":"","server":"6a55d323.f71b74","client":"","x":110,"y":366,"wires":[["b137c565.e1db1"]]},{"id":"b137c565.e1db1","type":"function","z":"24eaa0b5.1a8cc8","name":"","func":"delete msg._session;\nreturn msg;\n\n","outputs":1,"x":270,"y":366,"wires":[["a107ef96.f06ec8"]]},{"id":"a107ef96.f06ec8","type":"websocket out","z":"24eaa0b5.1a8cc8","name":"","server":"6a55d323.f71b74","client":"","x":441.9999694824219,"y":367,"wires":[]},{"id":"e31e6e73.37ebc8","type":"websocket out","z":"24eaa0b5.1a8cc8","name":"","server":"6a55d323.f71b74","client":"","x":952,"y":430.9999694824219,"wires":[]},{"id":"8a1604b4.02c3b8","type":"function","z":"24eaa0b5.1a8cc8","name":"Build Decision Payload ","func":"function IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif (context.global.nbtweets_analysed===undefined)\n\tcontext.global.nbtweets_analysed=0;\nelse\n\tcontext.global.nbtweets_analysed++;\n\nvar escaped_tweet = msg.payload.replace(/[^\\w\\s#@:.%/-]/gi, '');\n\nvar tweet = {};\ntweet.sentiment = msg.sentiment;\ntweet.payload = escaped_tweet;\ntweet.topic = msg.tweet.user.screen_name;\ntweet.lang = msg.lang;\ntweet.retweeted = msg.tweet.retweeted;\ntweet.source = encodeURI(msg.tweet.source);\ntweet.followers_count = msg.tweet.user.followers_count;\ntweet.friends_count = msg.tweet.user.friends_count;\ntweet.favorites_count = msg.tweet.favorite_count;\ntweet.geo_enabled = msg.tweet.user.geo_enabled;\ntweet.geo = msg.tweet.geo!==null? 'n a':null;\n\nvar business_rules_data = {};\nbusiness_rules_data.tweet = tweet;\n\nvar msg2={};\nmsg2.payload = JSON.stringify(business_rules_data);\n\nmsg3={};\nmsg3.payload={\"nbtweets_analysed\":context.global.nbtweets_analysed};\nif (IsJsonString(msg2.payload)===true)\n return [msg3,msg2];\nelse\n console.log('message ignored')","outputs":"2","noerr":0,"x":778,"y":193.99998474121094,"wires":[["cfb08d04.758578"],["ad419c6b.a89bd"]]},{"id":"780495d0.4ddd14","type":"function","z":"24eaa0b5.1a8cc8","name":"Parse Decision Response","func":"var tweet =  JSON.parse(msg.payload);\nvar msg2=null;\nif (tweet.rejected===true) {\n msg2={};\n msg2.payload='Rejected';\n return [msg2,null];\n }\nvar msg3 = {};\n//msg3.payload=JSON.parse(msg.payload);\nmsg3.payload=tweet;\nreturn [msg2,msg3]; ","outputs":"2","noerr":0,"x":785,"y":312,"wires":[["c3ec8b4a.bec248"],["54e53b47.eb533c"]]},{"id":"c3ec8b4a.bec248","type":"debug","z":"24eaa0b5.1a8cc8","name":"Rejected","active":false,"console":"false","complete":"false","x":1004,"y":309,"wires":[]},{"id":"75822d61.d4ca64","type":"function","z":"24eaa0b5.1a8cc8","name":"Extract Data","func":"//var tweet = msg.payload;\nvar msg2={};\nmsg2.payload={\"seriesTV\":context.global.seriesTV};\nreturn [msg,msg2];","outputs":"2","x":745,"y":428,"wires":[[],["e31e6e73.37ebc8"]]},{"id":"54e53b47.eb533c","type":"function","z":"24eaa0b5.1a8cc8","name":"Compute Scores","func":"var tweet = msg.payload.tweet;\nvar userName=null;\nif (tweet!==undefined && tweet.topic !== undefined)\n userName = tweet.topic;\nelse\n\treturn [null,null,null];\n\n// INITs\nif (context.global.seriesTV===undefined) {\n  context.global.seriesTV = {};\n}\nif (context.global.seriesTVInfluencers===undefined) {\n context.global.seriesTVInfluencers = {}; \n}\n\n\nvar serie;\nvar id = tweet.tvseriesId;\nif (id===undefined || id === null)\n\treturn [msg,null];\n\nvar idInt = parseInt(id.substring(2,id.length));\nif (idInt >= 1 && idInt <= 11)\n{\n\tif (context.global.seriesTV[id]===undefined)\t{\n     serie = { \"name\": tweet.tvseriesFriendlyName, \"score\":0, \"id\":idInt};\n     context.global.seriesTV[id]=serie;\n   \t}\n   \t\n   \t// PROCESS SCORE\n\t// if sentiment pos => score +2\n\t// if sentiment neu => score + 1\n\tif (tweet.sentiment !== null && id !== null) {\n  \t\tif (tweet.sentiment==\"pos\") {\n   \t\teval(\"context.global.seriesTV.\"+id+\".score+=2\"); \n  \t\t}\n  \t\tif (tweet.sentiment==\"neu\") {\n\t   \t\teval(\"context.global.seriesTV.\"+id+\".score++\");\n\t  \t}\n\t}\n\t// Update Global INFLUENCERS per serieTV\n\tif (context.global.seriesTVInfluencers[id]===undefined) {\n\t\t\n\t\tcontext.global.seriesTVInfluencers[id]={};\n\t\tcontext.global.seriesTVInfluencers[id].influencersArray=[];\n\t}\n\tvar userFound=false;\n\tvar influencer= null;\n\tvar j=0;\n\tfor (j=0 ; i < context.global.seriesTVInfluencers[id].influencersArray.length ; j++) {\n\t influencer = context.global.seriesTVInfluencers[id].influencersArray[j];\n\tif (influencer.userName==userName) {\n\t\tuserFound=true;\n\t\tbreak;\n\t\t}\n\t} //for\n\t\n\tif (userFound) {\n\t  influencer.totalInfluenceScore = influencer.totalInfluenceScore + tweet.influenceScore;\n\t}\n\telse {\n\tvar influencer = {\"userName\":userName, \"totalInfluenceScore\":tweet.influenceScore};\n\tcontext.global.seriesTVInfluencers[id].influencersArray.push(influencer);\n\t}\n\t\n\t// Find the Top influencer per serieTV\n\tarrayToProcess = context.global.seriesTVInfluencers[id].influencersArray.slice(); // duplicate the array of influencers for the serieTV\n\tvar i=0;\n\tvar topScore=0;\n\tvar topInfluencerUserName=\"none\";\n\tvar influencer=null;\n\tfor (0 ; i < arrayToProcess.length ; i++)\n\t{\n\t  influencer = arrayToProcess.shift(); // remove and return the first element of the array\n\t  if (influencer.totalInfluenceScore > topScore)\n\t  {\n\t  \ttopScore=influencer.totalInfluenceScore;\n\t  \ttopInfluencerUserName=influencer.userName;\n\t  }\n\t} // for\n\t// Add/Replace only the Top Influencer to context.global.seriesTV\n\tcontext.global.seriesTV[id].topInfluencer={\"topInfluencerUserName\":topInfluencerUserName,\"topScore\":topScore};\n} // if\t idInt\n\n//debug\nmsg2={};\nmsg2.payload = {\"seriesTV\":context.global.seriesTV};\nmsg3={};\nmsg3.payload = {\"seriesTVInfluencers\": context.global.seriesTVInfluencers[id].influencersArray};\n  \nreturn [msg,msg2,msg3];","outputs":"3","noerr":0,"x":761,"y":372,"wires":[["75822d61.d4ca64"],[],[]]},{"id":"cfb08d04.758578","type":"websocket out","z":"24eaa0b5.1a8cc8","name":"","server":"58b92e1e.d21bf8","client":"","x":1044,"y":191.99998474121094,"wires":[]},{"id":"306450f.cc4beb","type":"http in","z":"24eaa0b5.1a8cc8","name":"","url":"/ranking","method":"get","swaggerDoc":"","x":105,"y":441.9999694824219,"wires":[["d0e053c6.7ca93"]]},{"id":"d0e053c6.7ca93","type":"template","z":"24eaa0b5.1a8cc8","name":"WebFront /ranking","field":"","fieldType":"msg","format":"html","syntax":"mustache","template":"<head>\n\t<meta name=\"viewport\" content=\"width=320, initial-scale=1\">\n  <title>My TV Series Finder</title>\n\n\n<style type=\"text/css\">\n\nbody,html {\n\tbackground-color: #3b4b54; width : 100%;\n\theight: 100%;\n\tmargin: 1 auto;\n\tfont-family: \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n\tcolor: #ffffff;\n\tpadding-left: 10px;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: #00aed1;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\nimg {\n\tpadding-top: 10%;\n\tdisplay: block;\n\tmargin: 0 auto;\n\tpadding-bottom: 2em;\n\tmax-width:200px;\n}\n\nh1 {\n\tfont-weight: bold;\n\tfont-size: 2em;\n}\n\n.leftHalf {\n\tfloat: left;\n\tbackground-color: #26343f;\n\twidth: 45%;\n\theight: 100%;\n}\n\n.rightHalf {\n\tfloat: right;\n\twidth: 55%;\n\tbackground-color: #313f4a;\n\theight: 100%;\n\toverflow:auto;\n}\n\n.blue {\n\tcolor: #00aed1;\n}\n\n\ntable {\n\ttable-layout: fixed;\n\twidth: 600px;\n\tmargin: 1 auto;\n\tword-wrap: break-word;\n\t/*padding-top:10%;*/\n}\n\nth {\n\tborder-bottom: 1px solid #000;\n}\n\nth, td {\n\ttext-align: left;\n\tpadding: 2px 20px;\n}\n\n.tdscore {\n\ttext-align: right;\n\tpadding: 2px 20px;\n\twidth: 15%;\n}\n\n.env-var {\n\ttext-align: right;\n\tborder-right: 1px solid #000;\n\twidth: 30%;\n}\n\npre {\n\tpadding: 0;\n\tmargin: 0;\n}\n\n/* ADDED STYLE FOr DEMO */\n.photo {\n\twidth: 15%;\n}\n\n\n.serieName {\n\twidth: 40%\n}\n</style>\n</head>\n\n<body>\n  <h1>My TV Series Finder</h1>\n  <div id=\"wrapper\">\n    <div id=\"leaderboard\" class=\"content\"></div>\n    \n<p>This table shows in realtime the ranking of several TV series based on people sentiments on Twitter (English, French, Spanish) : </p>\n<ul>\n  <li>This ranking also shows for each TV serie the top influencer</li>\n  <li>The business rules of this application are managed and executed by the <a href=\"https://console.ng.bluemix.net/docs/#services/rules/rules.html#rules\" target=\"_blank\">Business Rules service on Bluemix</a>.</li>\n  <li>Translation of Spanish and French tweets are managed by the <a href=\"https://www.ibm.com/watson/developercloud/language-translation.html\" target=\"_blank\">Watson Language Translation service on Bluemix</a>.</li>\n  <li>The sentiment analysis is following AFINN-111 algorithm and is provided by the <a href=\"http://nodered.org\" target=\"_blank\">Node-RED open source tool</a></li>\n </ul>\n <p>Want to build your own app ? Follow this <a href=\"https://github.com/ylecleach/labs/tree/master/node-red/basic-labs/business-rules\" target=\"_blank\">Tutorial</a> on GitHub</p>\n\n <div id=\"nbtweets\" class=\"content\"></div>\n <div id=\"footer\"></div>\n\n </div>\n \n\n\n<script type=\"text/javascript\">\n  var wsUri = \"ws://{{req.headers.host}}/ws/tvseries\";\n  var ws = new WebSocket(wsUri);\n  \n  var wsUri2 = \"ws://{{req.headers.host}}/ws/nb_tweets\";\n  var ws2 = new WebSocket(wsUri2);\n  \n  function createSystemMessage(message) {\n    var message = document.createTextNode(message);\n\n    var messageBox = document.createElement('p');\n    messageBox.className = 'system';\n\n    messageBox.appendChild(message);\n\n    var footer = document.getElementById('footer');\n    footer.appendChild(messageBox);\n  }\n\n\nfunction sort(values) {\n  var length = values.length - 1;\n  do {\n    var swapped = false;\n    for(var i = 0; i < length; ++i) {\n      if (values[i].score < values[i+1].score) {\n        var temp = values[i];\n        values[i] = values[i+1];\n        values[i+1] = temp;\n        swapped = true;\n      }\n    }\n  } while(swapped == true);\n}\n\nfunction RefreshLeaderboardTVSeries(seriesTV) {\n\n\tvar i=0;\n\t// create an array\n\tvar tab = [];\n\tfor (i=1; i<=11; i++)\n\t{\n\tif  (seriesTV['id'+i] != undefined)  {\n\t\ttab.push(seriesTV['id'+i]);\n\t\t}\n\t}\n  \tif (tab.length>1)\n\t\tsort(tab);\n\tvar element = document.getElementById(\"table_leaderboard\");\n\tif (element!=null)\n\t\telement.parentNode.removeChild(element);\n\tvar table = document.createElement('table');\n\ttable.id=\"table_leaderboard\";\n\n\tvar header = table.createTHead();\n\tvar row = header.insertRow(0);    \n\tvar cell = row.insertCell(0);\n\tcell.innerHTML = \"<b>Score</b>\";\n\tcell.className=\"tdscore\";\n\tcell = row.insertCell(1);\n\tcell.innerHTML = \"<b>TV serie</b>\";\n\tcell = row.insertCell(2);\n\tcell.innerHTML = \"<b>Top Influencer</b>\";\n\t\n\tfor (i = 0; i < tab.length; i++) {\n\t\t\n\t\tvar tr = document.createElement('tr');   \n\t    var td1 = document.createElement('td');\n\t    td1.className=\"tdscore\";\n\t    var td2 = document.createElement('td');\n\t    td2.className=\"serieName\";\n\t    var td3 = document.createElement('td');\n\t    var text1 = document.createTextNode(tab[i].score);\n\t    var text2 = document.createTextNode(tab[i].name);\n\t    var text3 = document.createTextNode(tab[i].topInfluencer.topInfluencerUserName\n\t    \t\t\t\t\t\t\t+'  ('+ tab[i].topInfluencer.topScore +')');\n\t    td1.appendChild(text1);\n\t    td2.appendChild(text2);\n\t    td3.appendChild(text3);\n\t    tr.appendChild(td1);\n\t    tr.appendChild(td2);\n\t    tr.appendChild(td3);\n\t    table.appendChild(tr);\n\t} //for\n\t\n    var leaderboard = document.getElementById('leaderboard');\n    leaderboard.appendChild(table);\n    \n    \n    var element = document.getElementById(\"startedOn_date\");\n\tif (element!=null)\n\t\telement.parentNode.removeChild(element);\n\n    /*var message = document.createTextNode('Started analysis on: '+seriesTV.startedOn);\n    var messageBox = document.createElement('span');\n    messageBox.appendChild(message);\n    messageBox.id=\"startedOn_date\";\n    */\n\n    leaderboard.appendChild(messageBox);\n    \n  }\n\n  ws.onopen = function(ev) {\n    createSystemMessage('[Connected]');\n  };\n\n  ws.onclose = function(ev) {\n    createSystemMessage('[Disconnected] - press F5 or refresh your page');\n  }\n\n  ws.onmessage = function(ev) {\n    var data = JSON.parse(ev.data);\n\tRefreshLeaderboardTVSeries(data.seriesTV);\n  }\n\n  ws2.onopen = function(ev2) {\n  };\n  ws2.onclose = function(ev2) {\n  }\n  ws2.onmessage = function(ev2) {\n    var element = document.getElementById(\"tweets_count\");\n\tif (element!=null)\n\t\telement.parentNode.removeChild(element);\n    var data = JSON.parse(ev2.data);\n    var message = document.createTextNode('# Tweets analysed: '+data.nbtweets_analysed);\n    var messageBox = document.createElement('span');\n    messageBox.appendChild(message);\n    messageBox.id=\"tweets_count\";\n    var nb_tweets =  document.getElementById('nbtweets');\n    nb_tweets.appendChild(messageBox);\n  }\n\n  function sendMessage() {\n    var user = document.getElementById('user');\n    var message = document.getElementById('message');\n\n    var payload = {\n      message: message.value,\n      user: user.value\n    };\n\n    ws.send(JSON.stringify(payload));\n    message.value = \"\";\n  };\n\n</script>\n\n</body>\n","x":295,"y":441.9999694824219,"wires":[["4457cd63.099d6c"]]},{"id":"4457cd63.099d6c","type":"http response","z":"24eaa0b5.1a8cc8","name":"HTTP Response","x":496.9999694824219,"y":442.9999694824219,"wires":[]},{"id":"92ec4ee0.3b0488","type":"inject","z":"24eaa0b5.1a8cc8","name":"reset context","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":121,"y":307,"wires":[["80b8bd0e.556e6"]]},{"id":"80b8bd0e.556e6","type":"function","z":"24eaa0b5.1a8cc8","name":"Reset Global context","func":"context.global.seriesTV = {\"startedOn\": new Date().toString()};\ncontext.global.seriesTVInfluencers = {}; \ncontext.global.nbtweets_analysed=0;\n\nreturn msg;","outputs":1,"noerr":0,"x":319.9999694824219,"y":308.00006103515625,"wires":[[]]},{"id":"296b1563.c4f59a","type":"twitter in","z":"24eaa0b5.1a8cc8","twitter":"","tags":"#XFiles,#Znation,#Gotham,#TheStrain,#Legends,#HowToGetAwayWithMurder,#Outlander,#GameOfThrones,#walkingdead,#thewalkingdead","user":"true","name":"TV series hashtags","topic":"tweets","x":110.19999694824219,"y":76,"wires":[["2b8a3eab.677f3a"]]},{"id":"88dedc10.4f45e8","type":"sentiment","z":"24eaa0b5.1a8cc8","name":"","x":374.2000427246094,"y":79,"wires":[["6872b17b.fcf62"]]},{"id":"2b8a3eab.677f3a","type":"switch","z":"24eaa0b5.1a8cc8","name":"which lang ?","property":"tweet.lang","rules":[{"t":"eq","v":"en"},{"t":"eq","v":"fr"},{"t":"eq","v":"es"},{"t":"else"}],"checkall":"false","outputs":4,"x":107,"y":151.8000030517578,"wires":[["88dedc10.4f45e8"],["6a338bb.f04df74"],["81e35fb7.04fda8"],[]]},{"id":"6a338bb.f04df74","type":"watson-translate","z":"24eaa0b5.1a8cc8","name":"FR to EN","action":"translate","basemodel":"ar-en","domain":"conversational","srclang":"fr","destlang":"en","password":"","domainhidden":"conversational","srclanghidden":"fr","destlanghidden":"en","basemodelhidden":"ar-en","customhidden":"","trainid":"","x":287,"y":146.7999725341797,"wires":[["88dedc10.4f45e8"]]},{"id":"81e35fb7.04fda8","type":"watson-translate","z":"24eaa0b5.1a8cc8","name":"ES to EN","action":"translate","basemodel":"ar-en","domain":"conversational","srclang":"es","destlang":"en","password":"","domainhidden":"conversational","srclanghidden":"es","destlanghidden":"en","basemodelhidden":"ar-en","customhidden":"","trainid":"","x":293.2833251953125,"y":189.28330993652344,"wires":[["88dedc10.4f45e8"]]},{"id":"ad419c6b.a89bd","type":"business-rules","z":"24eaa0b5.1a8cc8","service":"Business-Rules-4-Node-RED","ruleset":"/DecisionServiceDeployment/1.0/TVSeriesFinderRuleset/1.0","x":770.066650390625,"y":259.550048828125,"wires":[["780495d0.4ddd14"]]},{"id":"5938d06b.e080f8","type":"comment","z":"24eaa0b5.1a8cc8","name":"Instructions to see the ranking","info":"To see the ranking, you have to open a new browser windows or tab and enter the URL : http://nodered-businessrules.mybluemix.net/ranking.\nNote : this assume your application is deployed to nodered-businessrules.mybluemix.net\n","x":361.3666687011719,"y":33.366668701171875,"wires":[]},{"id":"6a55d323.f71b74","type":"websocket-listener","path":"/ws/tvseries","wholemsg":"false"},{"id":"58b92e1e.d21bf8","type":"websocket-listener","path":"/ws/nb_tweets","wholemsg":"false"}]